{"version":3,"sources":["webpack:///src/app/pages/episodes/episodes.page.html","webpack:///src/app/pages/episodes/episodes-routing.module.ts","webpack:///src/app/pages/episodes/episodes.module.ts","webpack:///src/app/pages/episodes/episodes.page.scss","webpack:///src/app/pages/episodes/episodes.page.ts"],"names":["routes","path","component","EpisodesPageRoutingModule","imports","forChild","exports","EpisodesPageModule","declarations","EpisodesPage","router","api","episodes","getEpisodes","subscribe","data","console","log","episode","episodeId","episode_id","navigateByUrl","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAWA,QAAaC,yBAAyB;AAAA;AAAA,KAAtC;;AAAaA,6BAAyB,6DAJrC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAIqC,GAAzBH,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,QAAaI,kBAAkB;AAAA;AAAA,KAA/B;;AAAaA,sBAAkB,6DAT9B,+DAAS;AACRH,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,kFAJO,CADD;AAORI,kBAAY,EAAE,CAAC,2DAAD;AAPN,KAAT,CAS8B,GAAlBD,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSf,QAAaE,YAAY;AAErB,4BAAoBC,MAApB,EAA4CC,GAA5C,EAA6D;AAAA;;AAAzC,aAAAD,MAAA,GAAAA,MAAA;AAAwB,aAAAC,GAAA,GAAAA,GAAA;AAAoB;;AAF3C;AAAA;AAAA,mCAGV;AACP,eAAKC,QAAL,GAAgB,KAAKD,GAAL,CAASE,WAAT,EAAhB;AACA,eAAKD,QAAL,CAAcE,SAAd,CAAwB,UAAAC,IAAI,EAAI;AAC5BC,mBAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,IAAzB;AACH,WAFD;AAGH;AARoB;AAAA;AAAA,oCASTG,OATS,EASA;AACjB;AACA,cAAIC,SAAS,GAAGD,OAAO,CAACE,UAAxB;AACA,eAAKV,MAAL,CAAYW,aAAZ,0BAA4CF,SAA5C;AACH;AAboB;;AAAA;AAAA,OAAzB;;;;cAEgC;;cAAqB;;;;AAFxCV,gBAAY,6DALxB,gEAAU;AACPa,cAAQ,EAAE,cADH;AAEPC,cAAQ,EAAR;AAAA;AAAA,sGAFO;;;;AAAA,KAAV,CAKwB,E,+EAEO,sD,EAAqB,gE,EAF5B,GAAZd,YAAY,CAAZ","file":"episodes-episodes-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>Episodes</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <ion-list>\\r\\n        <ion-item button detail lines=\\\"inset\\\" *ngFor=\\\"let episode of episodes | async\\\" (click)=\\\"openDetails(episode)\\\">\\r\\n        {{ episode.title }}\\r\\n        </ion-item>\\r\\n    </ion-list>\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { EpisodesPage } from './episodes.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EpisodesPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class EpisodesPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { EpisodesPageRoutingModule } from './episodes-routing.module';\r\n\r\nimport { EpisodesPage } from './episodes.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    EpisodesPageRoutingModule\r\n  ],\r\n  declarations: [EpisodesPage]\r\n})\r\nexport class EpisodesPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2VwaXNvZGVzL2VwaXNvZGVzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiService } from '../../services/api.service';\r\n@Component({\r\n    selector: 'app-episodes',\r\n    templateUrl: './episodes.page.html',\r\n    styleUrls: ['./episodes.page.scss'],\r\n})\r\nexport class EpisodesPage implements OnInit {\r\n    episodes: Observable<any>;\r\n    constructor(private router: Router, private api: ApiService) { }\r\n    ngOnInit() {\r\n        this.episodes = this.api.getEpisodes();\r\n        this.episodes.subscribe(data => {\r\n            console.log('my data: ', data);\r\n        });\r\n    }\r\n    openDetails(episode) {\r\n        //console.log(episode);\r\n        let episodeId = episode.episode_id;\r\n        this.router.navigateByUrl(`/tabs/episodes/${episodeId}`);\r\n    }\r\n}"]}