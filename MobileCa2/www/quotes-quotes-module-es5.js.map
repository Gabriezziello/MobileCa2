{"version":3,"sources":["webpack:///src/app/pages/quotes/quotes.page.html","webpack:///src/app/pages/quotes/quotes-routing.module.ts","webpack:///src/app/pages/quotes/quotes.module.ts","webpack:///src/app/pages/quotes/quotes.page.scss","webpack:///src/app/pages/quotes/quotes.page.ts"],"names":["routes","path","component","QuotesPageRoutingModule","imports","forChild","exports","QuotesPageModule","declarations","QuotesPage","router","api","quotes","getQuotes","quote","quoteId","quote_id","navigateByUrl","event","search","target","value","trim","getQuotesByAuthor","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAWA,QAAaC,uBAAuB;AAAA;AAAA,KAApC;;AAAaA,2BAAuB,6DAJnC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAImC,GAAvBH,uBAAuB,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,QAAaI,gBAAgB;AAAA;AAAA,KAA7B;;AAAaA,oBAAgB,6DAT5B,+DAAS;AACRH,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,8EAJO,CADD;AAORI,kBAAY,EAAE,CAAC,uDAAD;AAPN,KAAT,CAS4B,GAAhBD,gBAAgB,CAAhB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUf,QAAaE,UAAU;AAEnB,0BAAoBC,MAApB,EAA4CC,GAA5C,EAA6D;AAAA;;AAAzC,aAAAD,MAAA,GAAAA,MAAA;AAAwB,aAAAC,GAAA,GAAAA,GAAA;AAAoB;;AAF7C;AAAA;AAAA,mCAGR;AACP,eAAKC,MAAL,GAAc,KAAKD,GAAL,CAASE,SAAT,EAAd;AACH;AALkB;AAAA;AAAA,oCAMPC,KANO,EAMA;AACf;AACA,cAAIC,OAAO,GAAGD,KAAK,CAACE,QAApB;AACA,eAAKN,MAAL,CAAYO,aAAZ,wBAA0CF,OAA1C;AACH;AAVkB;AAAA;AAAA,kCAWTG,KAXS,EAWF;AACf,cAAIC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA1B;;AACA,cAAIF,MAAM,IAAIA,MAAM,CAACG,IAAP,MAAiB,EAA/B,EAAmC;AACjC,iBAAKV,MAAL,GAAc,KAAKD,GAAL,CAASY,iBAAT,CAA2BJ,MAA3B,CAAd;AACD,WAFD,MAEK;AACH,iBAAKP,MAAL,GAAc,KAAKD,GAAL,CAASE,SAAT,EAAd;AACD;AACF;AAlBkB;;AAAA;AAAA,OAAvB;;;;cAEgC;;cAAqB;;;;AAFxCJ,cAAU,6DALtB,gEAAU;AACTe,cAAQ,EAAE,YADD;AAETC,cAAQ,EAAR;AAAA;AAAA,kGAFS;;;;AAAA,KAAV,CAKsB,E,+EAES,sD,EAAqB,gE,EAF9B,GAAVhB,UAAU,CAAV","file":"quotes-quotes-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>Quotes</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-searchbar showCancelButton=\\\"focus\\\" placeholder=\\\"Search by author\\\" (ionInput)=\\\"getQuotes($event)\\\"></ion-searchbar>\\r\\n  <ion-list>\\r\\n    <ion-item button detail lines=\\\"inset\\\" *ngFor=\\\"let quote of quotes | async\\\" (click)=\\\"openDetails(quote)\\\">     \\r\\n     <ion-label>{{ quote.quote }}</ion-label>      \\r\\n   </ion-item>\\r\\n</ion-list>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { QuotesPage } from './quotes.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: QuotesPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class QuotesPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { QuotesPageRoutingModule } from './quotes-routing.module';\r\n\r\nimport { QuotesPage } from './quotes.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    QuotesPageRoutingModule\r\n  ],\r\n  declarations: [QuotesPage]\r\n})\r\nexport class QuotesPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3F1b3Rlcy9xdW90ZXMucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiService } from '../../services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-quotes',\r\n  templateUrl: './quotes.page.html',\r\n  styleUrls: ['./quotes.page.scss'],\r\n})\r\nexport class QuotesPage implements OnInit {\r\n    quotes: Observable<any>;\r\n    constructor(private router: Router, private api: ApiService) { }\r\n    ngOnInit() {\r\n        this.quotes = this.api.getQuotes();        \r\n    }\r\n    openDetails(quote) {\r\n        // console.log(quote);\r\n        let quoteId = quote.quote_id;\r\n        this.router.navigateByUrl(`/tabs/quotes/${quoteId}`);\r\n    }\r\n    getQuotes(event) {\r\n      let search = event.target.value;    \r\n      if (search && search.trim() != '') {    \r\n        this.quotes = this.api.getQuotesByAuthor(search);\r\n      }else{\r\n        this.quotes = this.api.getQuotes(); \r\n      } \r\n    }\r\n}"]}